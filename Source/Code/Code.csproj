<?xml version="1.0" encoding="utf-8"?>
<Project>
	<PropertyGroup Label="Package/assembly details">
		<Version>1.0.0</Version>
		<AssemblyVersion>1.0.0</AssemblyVersion>
		<AssemblyFileVersion>1.0.0</AssemblyFileVersion>
		<Authors>ZzZombo</Authors>
		<AssemblyTitle>RimWorld modification assembly</AssemblyTitle>
		<Title>$(AssemblyTitle)</Title>
		<AssemblyDescription>Custom mod assembly for RimWorld</AssemblyDescription>
		<AssemblyCompany>ZzZombo</AssemblyCompany>
		<AssemblyProduct>ZzZombo-RW</AssemblyProduct>
		<AssemblyCopyright>Copyright © ZzZombo 2021</AssemblyCopyright>
		<PackageLicenseExpression>GPL-3.0-only</PackageLicenseExpression>
		<PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
		<RootNamespace>ZzZomboRW.*FIXME*</RootNamespace>
		<PackageId>$(RootNamespace)</PackageId>
		<AssemblyName>*FIXME*</AssemblyName>
		<!-- *FIXME* -->
		<PackageProjectUrl>https://github.com/ZzZombo/RimWorld-Template</PackageProjectUrl>
		<!-- *FIXME* -->
		<RepositoryUrl>https://github.com/ZzZombo/RimWorld-Template.git</RepositoryUrl>
		<RepositoryType>git</RepositoryType>
		<DefineConstants>MOD_SHOW_SETTINGS</DefineConstants>
	</PropertyGroup>
	<PropertyGroup Label="Build properties">
		<TargetFramework>net472</TargetFramework>
		<BaseIntermediateOutputPath>build\obj\</BaseIntermediateOutputPath>
		<BaseOutputPath>build\bin\</BaseOutputPath>
		<MSBuildProjectExtensionsPath>$(BaseIntermediateOutputPath)</MSBuildProjectExtensionsPath>
	</PropertyGroup>
	<Import Project="Sdk.props" Sdk="Microsoft.NET.Sdk" />
	<Choose>
		<When Condition="'$(Configuration)' == 'Release'">
			<PropertyGroup>
				<DefineConstants>$(DefineConstants);TRACE</DefineConstants>
				<DebugSymbols>false</DebugSymbols>
				<DebugType>none</DebugType>
				<ErrorReport>prompt</ErrorReport>
				<Optimize>true</Optimize>
				<WarningLevel>4</WarningLevel>
				<VersionSuffix></VersionSuffix>
			</PropertyGroup>
		</When>
		<Otherwise>
			<PropertyGroup>
				<DefineConstants>$(DefineConstants);TRACE;DEBUG</DefineConstants>
				<DebugSymbols>true</DebugSymbols>
				<DebugType>portable</DebugType>
				<Optimize>false</Optimize>
				<VersionSuffix>-$(Configuration)</VersionSuffix>
			</PropertyGroup>
		</Otherwise>
	</Choose>
	<PropertyGroup Label="Build properties">
		<GenerateAssemblyInfo>false</GenerateAssemblyInfo>
		<AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
		<AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>
		<LangVersion>9.0</LangVersion>
		<PlatformTarget>x64</PlatformTarget>
		<Deterministic>true</Deterministic>
		<OutputType>Library</OutputType>
		<TreatWarningsAsErrors>false</TreatWarningsAsErrors>
		<AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
		<EnableNETAnalyzers>true</EnableNETAnalyzers>
		<AutoIncrementPackageRevision>true</AutoIncrementPackageRevision>
		<ComVisible>false</ComVisible>
		<PublicizeAsReferenceAssemblies>$(Platform == 'Release')</PublicizeAsReferenceAssemblies>
		<!-- Build-in properties and properties dependent on them are customizable here. -->
		<OutputPath>$(BaseIntermediateOutputPath)$(Platform)\$(Configuration)\</OutputPath>
		<!-- Custom properties and properties dependent on them are customizable here. -->
		<C_UtilsDir Label="Where the auxillary PowerShell Core (v7.1.3+) scripts are">$(MSBuildThisFileDirectory)..\</C_UtilsDir>
		<C_TargetGameVer Label="The RimWorld version to build the mod for">$(Platform)</C_TargetGameVer>
		<C_RimWorldVersion Label="The same as the above, but w/o the leading letter prefix">$(C_TargetGameVer.Substring(1))</C_RimWorldVersion>
		<DefineConstants Label="Cond. symbol for the used RW version like `RW_VER_1_3`">
			<![CDATA[$(DefineConstants);RW_VER_$(C_RimWorldVersion.Replace('.', '_'))]]>
		</DefineConstants>
		<C_SourceContentDir Label="Path to misc. source content used in builds">$(MSBuildThisFileDirectory)..\Content\</C_SourceContentDir>
		<C_ModRootDir Label="The location of the mod">$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), .gitignore).TrimEnd('\/'))</C_ModRootDir>
		<!--
			RW v1.0 reads everything from the root folder of the mod, other versions from a version specific folder first;
			the following properties adjust for that.
		-->
		<C_ContentDir_v10 Label="Subfolder where mod content goes">\</C_ContentDir_v10>
		<C_ContentDir_v1x Label="Subfolder where mod content goes">\$(C_TargetGameVer)</C_ContentDir_v1x>
		<C_AssemblyCopyPath_v10 Label="Relative path where mod assemblies are copied to">$(C_ContentDir_v10)Assemblies\</C_AssemblyCopyPath_v10>
		<C_AssemblyCopyPath_v1x Label="Relative path where mod assemblies are copied to">$(C_ContentDir_v1x)$(VersionSuffix)\Assemblies\</C_AssemblyCopyPath_v1x>
		<C_CopyAssemblyName_v10 Label="Name under which the assembly will be copied">$(AssemblyName)$(VersionSuffix)</C_CopyAssemblyName_v10>
		<C_CopyAssemblyName_v1x Label="Name under which the assembly will be copied">$(AssemblyName)</C_CopyAssemblyName_v1x>
		<!--
			`v1.x` must come first here, other values should be sorted in the ascending order.
			Specifies target game versions. Unsupported values can be removed from this list.
		-->
		<Platforms>v1.x;v1.0;v1.1;v1.2;v1.3</Platforms>
	</PropertyGroup>
	<!-- Target game version-specific adjustments. -->
	<Choose>
		<When Condition="'$(Platform)' == 'v1.x'">
			<PropertyGroup>
				<!-- Refer to the latest supported game version instead. -->
				<C_RimWorldVersion>$(Platforms.Substring($([MSBuild]::Add($(Platforms.LastIndexOf(';')), 2))))</C_RimWorldVersion>
			</PropertyGroup>
		</When>
	</Choose>
	<Choose>
		<!-- See the comment for `C_ContentDir_v10` above. -->
		<When Condition="'$(Platform)' == 'v1.0'">
			<PropertyGroup>
				<C_ContentDir>$(C_ContentDir_v10)</C_ContentDir>
				<C_AssemblyCopyPath>$(C_AssemblyCopyPath_v10)</C_AssemblyCopyPath>
				<C_CopyAssemblyName>$(C_CopyAssemblyName_v10)</C_CopyAssemblyName>
			</PropertyGroup>
		</When>
		<!-- See the comment for `C_ContentDir_v10` above. -->
		<Otherwise>
			<PropertyGroup>
				<C_ContentDir>$(C_ContentDir_v1x)\</C_ContentDir>
				<C_AssemblyCopyPath>$(C_AssemblyCopyPath_v1x)</C_AssemblyCopyPath>
				<C_CopyAssemblyName>$(C_CopyAssemblyName_v1x)</C_CopyAssemblyName>
			</PropertyGroup>
		</Otherwise>
	</Choose>
	<!-- End of target game version-specific adjustments. -->
	<ItemGroup Label="Core references">
		<PackageReference Include="Krafs.Publicizer" Version="1.0.1">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Krafs.Rimworld.Ref" Version="$(C_RimWorldVersion).*" />
		<PackageReference Include="Lib.Harmony" Version="2.1.1" ExcludeAssets="runtime" />
		<Publicize Include="Assembly-CSharp;UnityEngine.CoreModule" />
		<ProjectReference Include="$(C_ModRootDir)\..\ZzZomboRW-Framework\Source\Code\Framework.csproj" Condition="'$(AssemblyName)' != 'Framework'">
			<Private>false</Private>
			<CopyLocalSatelliteAssemblies>false</CopyLocalSatelliteAssemblies>
			<ReferenceOutputAssembly>true</ReferenceOutputAssembly>
		</ProjectReference>
	</ItemGroup>
	<ItemGroup Label="Internal items and targets, for the build process">
		<LoadFolders Include="$(C_SourceContentDir)loadFolders.xml" />
		<CopyBinaries Include="$(OutputPath)$(AssemblyName).dll" />
		<CopyBinaries Include="$(OutputPath)$(AssemblyName).pdb" Condition="'$(Configuration)' != 'Release'" />
	</ItemGroup>
	<ItemGroup Condition="'$(C_TargetGameVer)' == 'v1.0'" Label="Files to clean up before build, for v1.0">
		<!-- Remove stale binaries from other configurations. -->
		<PreBuildCleanupFiles Include="$(C_ModRootDir)$(C_AssemblyCopyPath)$(AssemblyName).*" Condition="$(Configuration) != Release" />
		<PreBuildCleanupFiles Include="$(C_ModRootDir)$(C_AssemblyCopyPath)$(AssemblyName)$(VersionSuffix).*" Condition="$(Configuration) == Release" />
	</ItemGroup>
	<!-- Remove stale binaries from other configurations. Not needed for v1.x, as `loadFolders.xml` takes care of using the correct binaries. -->
	<!--<ItemGroup Condition="'$(Platform)' != 'v1.0'" Label="Files to clean up before build, for v1.x">
		<PreBuildCleanupFiles Include="$(C_ModRootDir)$(C_ContentDir_v1x)$(VersionSuffix)\Assemblies\$(AssemblyName).*" Condition="$(Configuration) != Release" />
		<PreBuildCleanupFiles Include="$(C_ModRootDir)$(C_ContentDir_v1x)\Assemblies\$(AssemblyName).*" Condition="$(Configuration) == Release" />
	</ItemGroup>-->
	<Target Name="PreBuildFileCleanup" Condition="'@(PreBuildCleanupFiles)' != ''">
		<Message Text="Pre-build cleanup for RW $(C_TargetGameVer), configuration &quot;$(Configuration)&quot;: @(PreBuildCleanupFiles)…" Importance="high" />
		<Delete Files="@(PreBuildCleanupFiles)" />
		<Message Text="Cleanup done." Importance="high" />
	</Target>
	<Target Name="PostBuildStep_CopyBinaries" BeforeTargets="AfterBuild" Inputs="@(CopyBinaries)" Outputs="@(CopyBinaries->'$(C_ModRootDir)$(C_AssemblyCopyPath)$(C_CopyAssemblyName)%(Extension)')">
		<Message Text="Copying binaries: @(CopyBinaries) to @(CopyBinaries->'$(C_ModRootDir)$(C_AssemblyCopyPath)$(C_CopyAssemblyName)%(Extension)')…" Importance="high" />
		<Copy DestinationFiles="@(CopyBinaries->'$(C_ModRootDir)$(C_AssemblyCopyPath)$(C_CopyAssemblyName)%(Extension)')" SourceFiles="@(CopyBinaries)" />
	</Target>
	<Target Name="ProjectCleanup">
		<Message Text="Project cleanup…" Importance="high" />
		<PropertyGroup>
			<FixupConfiguration>Release</FixupConfiguration>
		</PropertyGroup>
		<!-- Reset `loadFolders.xml` to its pristine state. -->
		<Copy SourceFiles="@(LoadFolders)" DestinationFolder="$(C_ModRootDir)" />
		<!-- Run the cleanup script. -->
		<Exec Command="pwsh -nop -File &quot;$(C_UtilsDir)projectCleanup.ps1&quot; -versions &quot;$(Platforms)&quot;" WorkingDirectory="$(C_UtilsDir)" />
		<Message Text="Cleanup done." Importance="high" />
	</Target>
	<Target Name="LoadFoldersFixup">
		<PropertyGroup>
			<FixupConfiguration Condition="$(FixupConfiguration) == ''">$(Configuration)</FixupConfiguration>
		</PropertyGroup>
		<Exec Command="pwsh -nop -File &quot;$(C_UtilsDir)loadFolderFixup.ps1&quot; -conf &quot;$(FixupConfiguration)&quot; -in &quot;@(LoadFolders)&quot; -out &quot;$(C_ModRootDir)\%(Filename)%(Extension)&quot;"
			WorkingDirectory="$(C_UtilsDir)" />
	</Target>
	<Target Name="PrepareRelease">
		<Message Importance="high" Text="Preparing a new release…" />
		<Exec Command="pwsh -nop -File &quot;$(C_UtilsDir)prepareRelease.ps1&quot; -version &quot;$(C_TargetGameVer)&quot; -outputPath &quot;$(C_ModRootDir)$(C_ContentDir)&quot;"
			WorkingDirectory="$(C_UtilsDir)" />
		<Message Text="Operation done." Importance="high" />
	</Target>
	<Target Name="MakeRelease">

	</Target>
	<Target Name="SetIsRebuild">
		<PropertyGroup>
			<C_IsRebuild>true</C_IsRebuild>
		</PropertyGroup>
	</Target>
	<Target Name="MakeArchive" DependsOnTargets="loadFoldersFixup">
		<Exec Command="pwsh -nop -File &quot;$(C_UtilsDir)makeArchive.ps1&quot; -versions &quot;$(Platforms)&quot; -conf &quot;$(Configuration)&quot; -path &quot;build\$(AssemblyName)$(VersionSuffix)-$([System.DateTime]::Now.ToString(dd-MM-yyyy_hh-mm))&quot; -root &quot;$(C_ModRootDir)&quot;" />
	</Target>
	<Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk" />
	<PropertyGroup Label="Build target ordering">
		<BuildDependsOn>PreBuildFileCleanup;$(BuildDependsOn);LoadFoldersFixup</BuildDependsOn>
		<CleanDependsOn>$(CleanDependsOn);ProjectCleanup</CleanDependsOn>
		<RebuildDependsOn>SetIsRebuild;$(RebuildDependsOn)</RebuildDependsOn>
	</PropertyGroup>
</Project>
